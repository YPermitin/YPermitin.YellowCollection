
#Область ОписаниеПеременных

Перем ОбъектНаСервере;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбъектНаСервере = ОбъектОбработки();
	
	РежимПолнотекстовогоПоискаРазрешить = ОбъектНаСервере.РежимПолнотекстовогоПоискаРазрешить();
	РежимПолнотекстовогоПоискаЗапретить = ОбъектНаСервере.РежимПолнотекстовогоПоискаЗапретить();
	
	Для Каждого ДоступноеЗначение Из Объект.РежимРазделенияСоставныхСловДоступныеЗначения Цикл
		Элементы.РежимРазделенияСоставныхСлов.СписокВыбора.Добавить(
			ДоступноеЗначение.Значение, 
			ДоступноеЗначение.Представление);
	КонецЦикла;
	
	ДоступнаФункцияРежимРазделенияСоставныхСлов = ОбъектНаСервере.ДоступнаФункцияРежимРазделенияСоставныхСлов();
	Элементы.РежимРазделенияСоставныхСлов.ТолькоПросмотр = НЕ ДоступнаФункцияРежимРазделенияСоставныхСлов;
	
	ДоступнаФункцияКоличествоЗаданийИндексирования = ОбъектНаСервере.ДоступнаФункцияКоличествоЗаданийИндексирования();
	Элементы.КоличествоЗаданийИндексирования.ТолькоПросмотр = НЕ ДоступнаФункцияКоличествоЗаданийИндексирования;
		
	ДоступнаФункцияМаксРазмерДанных = ОбъектНаСервере.ДоступнаФункцияМаксимальныйРазмерИндексируемыхДанных();
	Элементы.МаксимальныйРазмерИндексируемыхДанных.ТолькоПросмотр = НЕ ДоступнаФункцияМаксРазмерДанных;
		
	ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	
	СхемаСоставОбъектов = ОбъектНаСервере.ПолучитьМакет("СоставОбъектовПолнотекстовогоПоиска");
	АдресСхемыСоставОбъектов = ПоместитьВоВременноеХранилище(СхемаСоставОбъектов, УникальныйИдентификатор);
	ДоступныеНастройкиСоставОбъектов = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыСоставОбъектов);
	СоставОбъектовПолнотекстовогоПоиска.Инициализировать(ДоступныеНастройкиСоставОбъектов);
	СоставОбъектовПолнотекстовогоПоиска.ЗагрузитьНастройки(СхемаСоставОбъектов.НастройкиПоУмолчанию);	
	
	СхемаФайлы = ОбъектНаСервере.ПолучитьМакет("ФайлыПолнотекстовогоИндекса");
	АдресСхемыФайлы = ПоместитьВоВременноеХранилище(СхемаФайлы, УникальныйИдентификатор);
	ДоступныеНастройкиФайлы = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыФайлы);
	ФайлыПолнотекстовогоИндекса.Инициализировать(ДоступныеНастройкиФайлы);
	ФайлыПолнотекстовогоИндекса.ЗагрузитьНастройки(СхемаФайлы.НастройкиПоУмолчанию);
	
	СхемаОчередь = ОбъектНаСервере.ПолучитьМакет("ОчередьОбъектовКОбновлениюПолнотекстовогоИндекса");
	АдресСхемаОчередь = ПоместитьВоВременноеХранилище(СхемаОчередь, УникальныйИдентификатор);
	ДоступныеНастройкиОчередь = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемаОчередь);
	ОчередьКОбновлениюПолнотекстовогоИндекса.Инициализировать(ДоступныеНастройкиОчередь);
	ОчередьКОбновлениюПолнотекстовогоИндекса.ЗагрузитьНастройки(СхемаОчередь.НастройкиПоУмолчанию);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КоличествоЗаданийИндексированияПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	РезультатОперации = КоличествоЗаданийИндексированияПриИзмененииНаСервере();
	
	Если НЕ РезультатОперации.Успешно Тогда

		СообщитьПользователю(РезультатОперации.Сообщение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйРазмерИндексируемыхДанныхПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	РезультатОперации = МаксимальныйРазмерИндексируемыхДанныхПриИзмененииНаСервере();
	
	Если НЕ РезультатОперации.Успешно Тогда

		СообщитьПользователю(РезультатОперации.Сообщение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РежимРазделенияСоставныхСловПриИзменении(Элемент)
	
	ОчиститьСообщения();
	
	РезультатОперации = РежимРазделенияСоставныхСловПриИзмененииНаСервере();
	
	Если НЕ РезультатОперации.Успешно Тогда

		СообщитьПользователю(РезультатОперации.Сообщение);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КаталогПолнотекстовогоИндексаПриИзменении(Элемент)
	
	ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогПолнотекстовогоИндексаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеФайла = Новый Файл(Объект.КаталогПолнотекстовогоИндекса);
	
	Если НЕ ЗначениеЗаполнено(Объект.КаталогПолнотекстовогоИндекса)
		ИЛИ НЕ ОписаниеФайла.Существует()
		ИЛИ НЕ ОписаниеФайла.ЭтоКаталог() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КаталогПолнотекстовогоИндексаОткрытиеПродолжение", ЭтаФорма);
	
	НачатьЗапускПриложения(ОписаниеОповещения, Объект.КаталогПолнотекстовогоИндекса);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

//@skip-warning
&НаКлиенте
Процедура ВернутьсяКПанелиУправления(Команда)
	
	ВернутьсяКПанелиУправленияНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	ТекущаяСтраница = Элементы.ГруппаОсновнаяПанель.ТекущаяСтраница;
	
	Если ТекущаяСтраница = Элементы.ГруппаСоставОбъектовПолнотекстовогоПоиска Тогда

		СформироватьОтчетПоСоставуОбъектовПолнотекстовогоИндекса();
		
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаФайлыПолнотекстовогоИндекса Тогда

		СформироватьОтчетПоФайламПолнотекстовогоИндекса();	
		
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаОчередьКОбновлениюПолнотекстовогоИндекса Тогда

		СформироватьОтчетПоОчередиКОбновлениюПолнотекстовогоИндекса();
					
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнформациюПолнотекстовогоПоиска(Команда)
	
	ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРежимПолнотекстовогоПоиска(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьРежимПолнотекстовогоПоискаПродолжение", ЭтаФорма);
	
	Если Объект.ТекущийРежимПолнотекстовогоПоиска = РежимПолнотекстовогоПоискаРазрешить Тогда
		ТекстВопроса = "Отключить использование полнотекстового поиска в информационной базе?";
	Иначе
		ТекстВопроса = "Включить использование полнотекстового поиска в информационной базе?";		
	КонецЕсли;
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

&НаКлиенте
Процедура ПолноеОбновлениеПолнотекстовогоИндекса(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ПолноеОбновлениеПолнотекстовогоИндексаПродолжение", ЭтаФорма);
	
	ПоказатьВопрос(
		ОписаниеОповещения, 
		"Выполнить полное обновление полнотекстового индекса?", 
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастичноеОбновлениеПолнотекстовогоИндекса(Команда)

	ОписаниеОповещения = Новый ОписаниеОповещения("ЧастичноеОбновлениеПолнотекстовогоИндексаПродолжение", ЭтаФорма);
	
	ПоказатьВопрос(
		ОписаниеОповещения, 
		"Выполнить частичное обновление полнотекстового индекса?", 
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура СлияниеЧастичногоИПолногоПолнотекстовогоИндекса(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СлияниеЧастичногоИПолногоПолнотекстовогоИндексаПродолжение", ЭтаФорма);
	
	ПоказатьВопрос(
		ОписаниеОповещения, 
		"Выполнить слияние полного и частичного полнотекстового индекса?", 
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПолнотекстовыйИндекс(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьПолнотекстовыйИндексПродолжение", ЭтаФорма);
	
	ПоказатьВопрос(
		ОписаниеОповещения, 
		"Очистить полнотекстовый индекса?", 
		РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчередьКОбновлениюПолнотекстовогоИндекса(Команда)
	
	Элементы.ГруппаОсновнаяПанель.ТекущаяСтраница = Элементы.ГруппаОчередьКОбновлениюПолнотекстовогоИндекса;
	
	УстановитьВидимостьДоступность(ЭтаФорма);
	
	СформироватьОтчет(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ИнформацияОФайлахПолнотекстовогоИндекса(Команда)
	
	Элементы.ГруппаОсновнаяПанель.ТекущаяСтраница = Элементы.ГруппаФайлыПолнотекстовогоИндекса;
	
	УстановитьВидимостьДоступность(ЭтаФорма);
	
	СформироватьОтчет(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура СоставОбъектовПолнотекстовогоИндекса(Команда)
	
	Элементы.ГруппаОсновнаяПанель.ТекущаяСтраница = Элементы.ГруппаСоставОбъектовПолнотекстовогоПоиска;
	
	УстановитьВидимостьДоступность(ЭтаФорма);
	
	СформироватьОтчет(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура КаталогПолнотекстовогоИндексаОткрытиеПродолжение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	// Действий не требуется
	
КонецПроцедуры

&НаСервере
Процедура ВернутьсяКПанелиУправленияНаСервере()

	Элементы.ГруппаОсновнаяПанель.ТекущаяСтраница = Элементы.ГруппаУправлениеПолнотекстовымПоиском;
	
	СоставОбъектовПолнотекстовогоПоискаРезультат.Очистить();
	
	УстановитьВидимостьДоступность(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(Форма)

	Элементы = Форма.Элементы;
	ТекущаяСтраница = Элементы.ГруппаОсновнаяПанель.ТекущаяСтраница;
	
	ЭтоПанельУправления = ТекущаяСтраница = Элементы.ГруппаПолнотекстовыйПоискНедоступен
		ИЛИ ТекущаяСтраница = Элементы.ГруппаУправлениеПолнотекстовымПоиском;
		
	ЭтоПанельОтчета =
		ТекущаяСтраница = Элементы.ГруппаСоставОбъектовПолнотекстовогоПоиска
		ИЛИ ТекущаяСтраница = Элементы.ГруппаФайлыПолнотекстовогоИндекса
		ИЛИ ТекущаяСтраница = Элементы.ГруппаОчередьКОбновлениюПолнотекстовогоИндекса;
	
	Элементы.ФормаИзменитьРежимПолнотекстовогоПоиска.Видимость = ЭтоПанельУправления;
		
	Элементы.ФормаВернутьсяКПанелиУправления.Видимость = ЭтоПанельОтчета;		
	Элементы.ФормаСформироватьОтчет.Видимость = ЭтоПанельОтчета;

	Элементы.ФормаИзменитьРежимПолнотекстовогоПоиска.КнопкаПоУмолчанию = Ложь;
	Элементы.ФормаСформироватьОтчет.КнопкаПоУмолчанию = Ложь;		
	Если ЭтоПанельУправления Тогда
		Элементы.ФормаИзменитьРежимПолнотекстовогоПоиска.КнопкаПоУмолчанию = Истина;
	ИначеЕсли ЭтоПанельОтчета Тогда
		Элементы.ФормаСформироватьОтчет.КнопкаПоУмолчанию = Истина;				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетПоСоставуОбъектовПолнотекстовогоИндекса()

	ОбъектНаСервере = ОбъектОбработки();

	СоставОбъектовПолнотекстовогоПоискаРезультат.Очистить();
	СхемаСоставОбъектов = ОбъектНаСервере.ПолучитьМакет("СоставОбъектовПолнотекстовогоПоиска");

	НастройкиСоставОбъектов = СоставОбъектовПолнотекстовогоПоиска.ПолучитьНастройки();                   
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;          
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаСоставОбъектов, НастройкиСоставОбъектов);
	
	ДанныеПолнотекстовогоПоиска = ОбъектНаСервере.ТаблицаИспользованияПолнотекстовогоПоиска();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ДанныеПолнотекстовогоПоиска", ДанныеПолнотекстовогоПоиска);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(СоставОбъектовПолнотекстовогоПоискаРезультат);
	
	ПроцессорВывода.НачатьВывод();
	ЭлементРезультатКомпоновки = ПроцессорКомпоновкиДанных.Следующий();
	Пока ЭлементРезультатКомпоновки <> Неопределено Цикл
		ПроцессорВывода.ВывестиЭлемент(ЭлементРезультатКомпоновки);
		ЭлементРезультатКомпоновки = ПроцессорКомпоновкиДанных.Следующий();
	КонецЦикла;
	ПроцессорВывода.ЗакончитьВывод();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетПоФайламПолнотекстовогоИндекса()

	ОбъектНаСервере = ОбъектОбработки();

	ФайлыПолнотекстовогоИндексаРезультат.Очистить();
	СхемаФайлы = ОбъектНаСервере.ПолучитьМакет("ФайлыПолнотекстовогоИндекса");

	НастройкиФайлы = ФайлыПолнотекстовогоИндекса.ПолучитьНастройки();                   
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;          
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаФайлы, НастройкиФайлы);
	
	ТаблицаФайлов = ОбъектНаСервере.ТаблицаФайловПолнотекстовогоИндекса();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ФайлыПолнотекстовогоИндекса", ТаблицаФайлов);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ФайлыПолнотекстовогоИндексаРезультат);
	
	ПроцессорВывода.НачатьВывод();
	ЭлементРезультатКомпоновки = ПроцессорКомпоновкиДанных.Следующий();
	Пока ЭлементРезультатКомпоновки <> Неопределено Цикл
		ПроцессорВывода.ВывестиЭлемент(ЭлементРезультатКомпоновки);
		ЭлементРезультатКомпоновки = ПроцессорКомпоновкиДанных.Следующий();
	КонецЦикла;
	ПроцессорВывода.ЗакончитьВывод();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетПоОчередиКОбновлениюПолнотекстовогоИндекса()

	ОбъектНаСервере = ОбъектОбработки();

	ОчередьКОбновлениюПолнотекстовогоИндексаРезультат.Очистить();
	СхемаОчередь = ОбъектНаСервере.ПолучитьМакет("ОчередьОбъектовКОбновлениюПолнотекстовогоИндекса");

	НастройкиОчередь = ОчередьКОбновлениюПолнотекстовогоИндекса.ПолучитьНастройки();                   
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;          
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаОчередь, НастройкиОчередь);
	
	ТаблицаОчереди = ОбъектНаСервере.ТаблицаОчередиКОбновлениюПолнотекстовогоИндекса();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОчередьОбъектовКОбновлениюПолнотекстовогоИндекса", ТаблицаОчереди);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ОчередьКОбновлениюПолнотекстовогоИндексаРезультат);
	
	ПроцессорВывода.НачатьВывод();
	ЭлементРезультатКомпоновки = ПроцессорКомпоновкиДанных.Следующий();
	Пока ЭлементРезультатКомпоновки <> Неопределено Цикл
		ПроцессорВывода.ВывестиЭлемент(ЭлементРезультатКомпоновки);
		ЭлементРезультатКомпоновки = ПроцессорКомпоновкиДанных.Следующий();
	КонецЦикла;
	ПроцессорВывода.ЗакончитьВывод();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьРежимПолнотекстовогоПоискаПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
	
		ОчиститьСообщения();
		
		Если Объект.ТекущийРежимПолнотекстовогоПоиска = РежимПолнотекстовогоПоискаРазрешить Тогда
			
			Состояние("Выключение полнотекстового поиска...");
			
			РезультатОперации = ВыключитьПолнотекстовыйПоискНаСервере();
						
		Иначе
			
			Состояние("Включение полнотекстового поиска...");
			
			РезультатОперации = ВключитьПолнотекстовыйПоискНаСервере();
					
		КонецЕсли;
		
		Если НЕ РезультатОперации.Успешно Тогда
	
			СообщитьПользователю(РезультатОперации.Сообщение);	
				
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолноеОбновлениеПолнотекстовогоИндексаПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда

		ОчиститьСообщения();

		Состояние("Выполняется полное обновление полнотекстового индекса...");
		
		РезультатОперации = ПолноеОбновлениеПолнотекстовогоИндексаНаСервере();
		
		Если НЕ РезультатОперации.Успешно Тогда
	
			СообщитьПользователю(РезультатОперации.Сообщение);	
				
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЧастичноеОбновлениеПолнотекстовогоИндексаПродолжение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОчиститьСообщения();
		
		Состояние("Выполняется частичное обновление полнотекстового индекса...");
		
		РезультатОперации = ЧастичноеОбновлениеПолнотекстовогоИндексаНаСервере();
		
		Если НЕ РезультатОперации.Успешно Тогда
	
			СообщитьПользователю(РезультатОперации.Сообщение);	
				
		КонецЕсли;		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СлияниеЧастичногоИПолногоПолнотекстовогоИндексаПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОчиститьСообщения();
	
		Состояние("Выполняется слияние полного и частичного полнотекстового индекса...");
		
		РезультатОперации = СлияниеЧастичногоИПолногоПолнотекстовогоИндексаНаСервере();
		
		Если НЕ РезультатОперации.Успешно Тогда
	
			СообщитьПользователю(РезультатОперации.Сообщение);	
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПолнотекстовыйИндексПродолжение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОчиститьСообщения();
		
		Состояние("Выполняется очистка полнотекстового индекса...");
		
		РезультатОперации = ОчиститьПолнотекстовыйИндексНаСервере();
		
		Если НЕ РезультатОперации.Успешно Тогда
	
			СообщитьПользователю(РезультатОперации.Сообщение);	
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбъектОбработки()

	Если ОбъектНаСервере = Неопределено Тогда
		ОбъектНаСервере = РеквизитФормыВЗначение("Объект");		
	КонецЕсли;
	
	Возврат ОбъектНаСервере;
	
КонецФункции

&НаСервере
Процедура ОбновитьИнформациюПолнотекстовогоПоискаНаСервере()
	
	ОпределятьКаталогПолнотекстовогоИндекса = НЕ ЗначениеЗаполнено(Объект.КаталогПолнотекстовогоИндекса);
	
	ОбъектНаСервере = ОбъектОбработки();
	ОбъектНаСервере.ОбновитьИнформациюПолнотекстовогоПоиска(ОпределятьКаталогПолнотекстовогоИндекса);
	ЗначениеВРеквизитФормы(ОбъектНаСервере, "Объект");

	Если ЗначениеЗаполнено(Объект.ДатаАктуальности) Тогда	
				
		ОписаниеСтроки = Новый ФорматированнаяСтрока(
			Новый ФорматированнаяСтрока("Индекс актуален на ", Новый Шрифт(,,Истина), Новый Цвет(83,106,194)),
			Новый ФорматированнаяСтрока(
				Формат(Объект.ДатаАктуальности, "ДЛФ=DT;"), Новый Шрифт(,,Истина, Истина), 
				Новый Цвет(83,106,194))
			);
		
	Иначе
		
		ОписаниеСтроки = Новый ФорматированнаяСтрока(
			"Дата актуальности полнотекстового индекса неизвестна.", 
			Новый Шрифт(,,Истина), 
			Новый Цвет(255,0,0));
			
	КонецЕсли;
	Элементы.ДекорацияДатаАктуальности.Заголовок = ОписаниеСтроки;
	
	ОбновитьИнформациюПоРежимуПолнотекстовогоПоискаНаСервере();
	
	УстановитьВидимостьДоступность(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюПоРежимуПолнотекстовогоПоискаНаСервере()

	ОбъектНаСервере = ОбъектОбработки();
	
	Если ОбъектНаСервере.ТекущийРежимПолнотекстовогоПоиска = РежимПолнотекстовогоПоискаРазрешить Тогда
		
		Элементы.ФормаИзменитьРежимПолнотекстовогоПоиска.Заголовок = "Отключить полнотекстовый поиск";
		Элементы.ГруппаОсновнаяПанель.ТекущаяСтраница = Элементы.ГруппаУправлениеПолнотекстовымПоиском;
		Элементы.ФормаИзменитьРежимПолнотекстовогоПоиска.Картинка = БиблиотекаКартинок.Остановить;		
				
	Иначе
		
		Элементы.ФормаИзменитьРежимПолнотекстовогоПоиска.Заголовок = "Включить полнотекстовый поиск";
		Элементы.ГруппаОсновнаяПанель.ТекущаяСтраница = Элементы.ГруппаПолнотекстовыйПоискНедоступен;
		Элементы.ФормаИзменитьРежимПолнотекстовогоПоиска.Картинка = БиблиотекаКартинок.СинтаксическийКонтроль;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ВключитьПолнотекстовыйПоискНаСервере()

	РезультатОперации = ОбъектОбработки().ВключитьПолнотекстовыйПоиск();
	
	Если РезультатОперации.Успешно Тогда
		ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	КонецЕсли;
	
	Возврат РезультатОперации;
	
КонецФункции

&НаСервере
Функция ВыключитьПолнотекстовыйПоискНаСервере()

	РезультатОперации = ОбъектОбработки().ВыключитьПолнотекстовыйПоиск();
	
	Если РезультатОперации.Успешно Тогда
		ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	КонецЕсли;
	
	Возврат РезультатОперации;
	
КонецФункции

&НаСервере
Функция ПолноеОбновлениеПолнотекстовогоИндексаНаСервере()
	
	РезультатОперации = ОбъектОбработки().ПолноеОбновлениеПолнотекстовогоИндекса();
	
	Если РезультатОперации.Успешно Тогда
		ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	КонецЕсли;
	
	Возврат РезультатОперации;

КонецФункции

&НаСервере
Функция ЧастичноеОбновлениеПолнотекстовогоИндексаНаСервере()
	
	РезультатОперации = ОбъектОбработки().ЧастичноеОбновлениеПолнотекстовогоИндекса();
	
	Если РезультатОперации.Успешно Тогда
		ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	КонецЕсли;
	
	Возврат РезультатОперации;
	
КонецФункции

&НаСервере
Функция СлияниеЧастичногоИПолногоПолнотекстовогоИндексаНаСервере()
	
	РезультатОперации = ОбъектОбработки().СлияниеЧастичногоИПолногоПолнотекстовогоИндекса();
	
	Если РезультатОперации.Успешно Тогда
		ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	КонецЕсли;
	
	Возврат РезультатОперации;
	
КонецФункции

&НаСервере
Функция ОчиститьПолнотекстовыйИндексНаСервере()

	РезультатОперации = ОбъектОбработки().ОчиститьПолнотекстовыйИндекс();
	
	Если РезультатОперации.Успешно Тогда
		ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	КонецЕсли;
	
	Возврат РезультатОперации;

КонецФункции

&НаСервере
Функция МаксимальныйРазмерИндексируемыхДанныхПриИзмененииНаСервере()
	
	РезультатОперации = ОбъектОбработки().СохранитьМаксимальныйРазмерИндексируемыхДанных(
		Объект.МаксимальныйРазмерИндексируемыхДанных);
	
	ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	
	Возврат РезультатОперации;
	
КонецФункции

&НаСервере
Функция КоличествоЗаданийИндексированияПриИзмененииНаСервере()
	
	РезультатОперации = ОбъектОбработки().СохранитьКоличествоЗаданийИндексирования(
		Объект.КоличествоЗаданийИндексирования);
	
	ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	
	Возврат РезультатОперации;
	
КонецФункции

&НаСервере
Функция РежимРазделенияСоставныхСловПриИзмененииНаСервере()

	РезультатОперации = ОбъектОбработки().СохранитьРежимРазделенияСоставныхСлов(
		Объект.ТекущийРежимРазделенияСоставныхСлов);
	
	ОбновитьИнформациюПолнотекстовогоПоискаНаСервере();
	
	Возврат РезультатОперации;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура СообщитьПользователю(
		Знач ТекстСообщенияПользователю,
		Знач КлючДанных = Неопределено,
		Знач Поле = "",
		Знач ПутьКДанным = "",
		Отказ = Ложь)
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщенияПользователю;
	Сообщение.Поле = Поле;
	Сообщение.КлючДанных = КлючДанных;
	
	Если НЕ ПустаяСтрока(ПутьКДанным) Тогда
		Сообщение.ПутьКДанным = ПутьКДанным;
	КонецЕсли;
		
	Сообщение.Сообщить();
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

