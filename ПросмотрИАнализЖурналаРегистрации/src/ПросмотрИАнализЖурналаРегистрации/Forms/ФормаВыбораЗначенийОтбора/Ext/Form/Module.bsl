
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ВсеЗначения")
		И ТипЗнч(Параметры.ВсеЗначения) = Тип("СписокЗначений")Тогда
		СписокИсключений = Неопределено;
		Если Параметры.Свойство("МоиЗначения")
			И ТипЗнч(Параметры.МоиЗначения) = Тип("СписокЗначений") Тогда
			СписокИсключений = Параметры.МоиЗначения;
		КонецЕсли;
		ЗаполнитьДеревоЗначений("ВсеЗначения", Параметры.ВсеЗначения, СписокИсключений);
	КонецЕсли;
	Если Параметры.Свойство("МоиЗначения")
		И ТипЗнч(Параметры.МоиЗначения) = Тип("СписокЗначений") Тогда
		ЗаполнитьДеревоЗначений("МоиЗначения", Параметры.МоиЗначения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ВыборСделан Тогда
		ВыбранныеЗначений = Новый СписокЗначений;
		ВыбранныеЭлементы = МоиЗначения.ПолучитьЭлементы();
		Для Каждого Стр Из ВыбранныеЭлементы Цикл
			ВыбранныеЗначений.Добавить(Стр.Значение, Стр.Представление);
		КонецЦикла;
		ОповеститьОВыборе(ВыбранныеЗначений);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДобавитьВсеЗначения(Команда)
	
	ВсеДоступныеЗначений = ВсеЗначения.ПолучитьЭлементы();
	
	ВсегоЭлементов = ВсеДоступныеЗначений.Количество();
	Пока ВсегоЭлементов > 0 Цикл
		ДобавитьЗначение(Команда, ВсеДоступныеЗначений[ВсегоЭлементов-1]);
		ВсегоЭлементов = ВсегоЭлементов - 1;
	КонецЦикла;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеЗначения(Команда)
	
	ВсеВыбранныеЗначения = МоиЗначения.ПолучитьЭлементы();
	
	ВсегоЭлементов = ВсеВыбранныеЗначения.Количество();
	Пока ВсегоЭлементов > 0 Цикл
		УдалитьЗначение(Команда, ВсеВыбранныеЗначения[ВсегоЭлементов-1]);
		ВсегоЭлементов = ВсегоЭлементов - 1;
	КонецЦикла;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ВыборСделан = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеЗначенияПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура МоиЗначенияПослеУдаления(Элемент)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗначение(Команда, ТекущаяСтрокаДоступногоЗначения = Неопределено)
	
	Если ТекущаяСтрокаДоступногоЗначения = Неопределено Тогда
		ТекущиеДанные = Элементы.ВсеЗначения.ТекущиеДанные;
	Иначе
		ТекущиеДанные = ТекущаяСтрокаДоступногоЗначения;
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено И НЕ ПустаяСтрока(ТекущиеДанные.Значение) Тогда
		ДобавитьЗначениеВВыбранные(ТекущиеДанные);
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗначение(Команда, ТекущаяСтрокаВыбранногоЗначения = Неопределено)
	
	Если ТекущаяСтрокаВыбранногоЗначения = Неопределено Тогда
		ТекущиеДанные = Элементы.МоиЗначения.ТекущиеДанные;
	Иначе
		ТекущиеДанные = ТекущаяСтрокаВыбранногоЗначения;
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено И НЕ ПустаяСтрока(ТекущиеДанные.Значение) Тогда
		УдалитьЗначениеИзВыбранных(ТекущиеДанные);
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область Служебные

&НаСервере
Функция ЗаполнитьДеревоЗначений(ИмяДереваДляЗаполнения, ДанныеЗаполнения, СписокИсключений = Неопределено)
	
	Если СписокИсключений = Неопределено Тогда
		СписокИсключений = Новый СписокЗначений;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СписокЗначений") Тогда
		
		ЭлементыДерева = ЭтаФорма[ИмяДереваДляЗаполнения].ПолучитьЭлементы();
		
		Для Каждого Эл Из ДанныеЗаполнения Цикл
			
			Если НЕ СписокИсключений.НайтиПоЗначению(Эл.Значение) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НовыйЭлементДерева = ЭлементыДерева.Добавить();
			НовыйЭлементДерева.Значение = Эл.Значение;
			НовыйЭлементДерева.Представление = Эл.Представление;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьЗначениеВВыбранные(СтрокаИзСпискаВсехЗначений)
	
	ЭлементыВыбранныхЗначений = МоиЗначения.ПолучитьЭлементы();
	НовВыбранноеЗначение = ЭлементыВыбранныхЗначений.Добавить();
	НовВыбранноеЗначение.Значение = СтрокаИзСпискаВсехЗначений.Значение;
	НовВыбранноеЗначение.Представление = СтрокаИзСпискаВсехЗначений.Представление;
	
	Элементы.МоиЗначения.ТекущаяСтрока = НовВыбранноеЗначение.ПолучитьИдентификатор();
	
	ВсеЗначения.ПолучитьЭлементы().Удалить(СтрокаИзСпискаВсехЗначений);
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВсеКомандыСервер()
	
	ЗначениеВРеквизитФормы(РеквизитФормыВЗначение("ВсеКоманды"), "МоиКоманды");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЗначениеИзВыбранных(СтрокаИзСпискаВыранных)
	
	ЭлементыДоступныхЗначений = ВсеЗначения.ПолучитьЭлементы();
	НовДоступноеЗначение = ЭлементыДоступныхЗначений.Добавить();
	НовДоступноеЗначение.Значение = СтрокаИзСпискаВыранных.Значение;
	НовДоступноеЗначение.Представление = СтрокаИзСпискаВыранных.Представление;
	
	Элементы.ВсеЗначения.ТекущаяСтрока = НовДоступноеЗначение.ПолучитьИдентификатор();

	МоиЗначения.ПолучитьЭлементы().Удалить(СтрокаИзСпискаВыранных);
	
	Модифицированность = Ложь;

КонецПроцедуры

#КонецОбласти