#Область ОписаниеПеременных

&НаКлиенте
Перем КомпонентаКлиент;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьАдресКомпоненты();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьИнформацию(Команда)
	
	Если КомпонентаКлиент = Неопределено Тогда
		КомпонентаКлиент = СоздатьОбъектКомпоненты(АдресКомпоненты);
	КонецЕсли;
	
	Если НЕ КомпонентаКлиент = Неопределено Тогда
		Объект.ИмяКомпьютераКлиент = КомпонентаКлиент.ИмяКомпьютера();
		Объект.ИмяПользователяКлиент = КомпонентаКлиент.ИмяПользователя();
		Объект.ИдентификаторПотокаКлиент = КомпонентаКлиент.ИдентификаторПотока();
		Объект.ИдентификаторПроцессаКлиент = КомпонентаКлиент.ИдентификаторПроцесса();
		Объект.ИмяПроцессаКлиент = КомпонентаКлиент.ИмяПроцесса();
		Объект.ИмяДоменаКлиент = КомпонентаКлиент.ИмяДомена();
		Объект.ТекущаяДатаКлиент = КомпонентаКлиент.ТекущаяДата();
	КонецЕсли;
	
	ИнформацияОСистеме = Новый СистемнаяИнформация;
	Объект.ВерсияОСКлиент = ИнформацияОСистеме.ВерсияОС;
	Объект.ВерсияПриложенияКлиент = ИнформацияОСистеме.ВерсияПриложения;
	Объект.ИдентификаторКлиентаКлиент = ИнформацияОСистеме.ИдентификаторКлиента;
	Объект.ИнформацияПрограммыПросмотраКлиент = ИнформацияОСистеме.ИнформацияПрограммыПросмотра;
	Объект.ОперативнаяПамятьКлиент = ИнформацияОСистеме.ОперативнаяПамять;
	Объект.ПроцессорКлиент = ИнформацияОСистеме.Процессор;
	Объект.ТипПлатформыКлиент = ИнформацияОСистеме.ТипПлатформы;
	
	ОбновитьИнформациюНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьИнформациюНаСервере()
	
	Компонента = СоздатьОбъектКомпоненты(АдресКомпоненты);
	Если НЕ Компонента = Неопределено Тогда
		Объект.ИмяКомпьютераСервер = Компонента.ИмяКомпьютера();
		Объект.ИмяПользователяСервер = Компонента.ИмяПользователя();
		Объект.ИдентификаторПотокаСервер = Компонента.ИдентификаторПотока();
		Объект.ИдентификаторПроцессаСервер = Компонента.ИдентификаторПроцесса();
		Объект.ИмяПроцессаСервер = Компонента.ИмяПроцесса();
		Объект.ИмяДоменаСервер = Компонента.ИмяДомена();
		Объект.ТекущаяДатаСервер = Компонента.ТекущаяДата();
	КонецЕсли;
	
	ИнформацияОСистеме = Новый СистемнаяИнформация;
	Объект.ВерсияОССервер = ИнформацияОСистеме.ВерсияОС;
	Объект.ВерсияПриложенияСервер = ИнформацияОСистеме.ВерсияПриложения;
	Объект.ИдентификаторКлиентаСервер = ИнформацияОСистеме.ИдентификаторКлиента;
	Объект.ИнформацияПрограммыПросмотраСервер = ИнформацияОСистеме.ИнформацияПрограммыПросмотра;
	Объект.ОперативнаяПамятьСервер = ИнформацияОСистеме.ОперативнаяПамять;
	Объект.ПроцессорСервер = ИнформацияОСистеме.Процессор;
	Объект.ТипПлатформыСервер = ИнформацияОСистеме.ТипПлатформы;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СоздатьОбъектКомпоненты(АдресКомпоненты) Экспорт
	
	Попытка
		
		ИмяКонтекста = "сервере";
		ИмяКомпоненты = АдресКомпоненты;
		
		#Если Клиент Тогда
		УстановитьВнешнююКомпоненту(ИмяКомпоненты);
		ИмяКонтекста = "клиенте";
		#КонецЕсли
		
		Результат = ПодключитьВнешнююКомпоненту(ИмяКомпоненты, "YY", ТипВнешнейКомпоненты.Native);
		Если Результат = Ложь Тогда
			ВызватьИсключение "Не удалось создать объект компоненты """ + ИмяКомпоненты + """";
		КонецЕсли;
		
		ОбъектВК = Новый("AddIn.YY.YellowDiagnostician");		
		Возврат ОбъектВК;
		
	Исключение
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка при инициализации компоненты на "
			+ ИмяКонтекста
			+ ": "
			+ Символы.ПС
			+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Сообщение.Сообщить();
		
	КонецПопытки;	
	
КонецФункции

&НаСервере
Процедура ИнициализироватьАдресКомпоненты()
	
	ОбъектНаСервере = РеквизитФормыВЗначение("Объект");
	ДанныеКомпоненты = ОбъектНаСервере.ПолучитьМакет("yy_YellowDiagnostician");
	АдресКомпоненты = ПоместитьВоВременноеХранилище(ДанныеКомпоненты, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти